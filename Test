
function showLog(message) {
    var logDiv = document.getElementById("debug-log");
    if (!logDiv) return;

    logDiv.style.display = "block";
    var time = new Date().toLocaleTimeString();
    logDiv.innerHTML += `<div style="margin-bottom:8px;">[${time}] ${message}</div>`;
}



window.onerror = function(message, source, lineno, colno, error) {
    let logMessage = "<strong>‚ùå JavaScript Error:</strong><br>";

    if (error && error.stack) {
        // Use the full stack trace (best way)
        logMessage += `<pre style="white-space:pre-wrap; font-family:monospace; font-size:12px;">${error.stack}</pre>`;
    } else {
        // Fallback for old IE or unknown cases
        logMessage += `<pre style="white-space:pre-wrap; font-family:monospace; font-size:12px;">${message} at ${source}:${lineno}:${colno}</pre>`;
    }

    showLog(logMessage);
    return true; // Prevent browser's default error dialog
};





function showLog(message) {
    var logDiv = document.getElementById("debug-log");
    if (!logDiv) return;

    logDiv.style.display = "block";
    var time = new Date().toLocaleTimeString();

    // Try to capture caller's stack info
    var stack = new Error().stack;
    var locationInfo = "";

    if (stack) {
        var lines = stack.split("\n");
        if (lines[2]) {
            locationInfo = lines[2].trim();
        }
    }

    logDiv.innerHTML += `<div>[${time}] ${message}<br><small style="color:gray;">${locationInfo}</small></div>`;
}





<div id="debug-log" style="display:none; background:#eee; color:#000; font-size:12px; padding:10px; position:fixed; bottom:0; left:0; width:100%; max-height:200px; overflow:auto; z-index:9999;"></div>


function showLog(message) {
    var logDiv = document.getElementById("debug-log");
    logDiv.style.display = "block";
    var time = new Date().toLocaleTimeString();
    logDiv.innerHTML += "<div>[" + time + "] " + message + "</div>";
}


showLog("Controller loaded");


javascript:(
  function() {
    var debugDiv = document.createElement('div');
    debugDiv.id = 'debugConsole';
    debugDiv.style.cssText = 'position:fixed;bottom:0;right:0;width:100%;height:200px;background:black;color:lime;overflow:auto;z-index:9999;padding:10px;font-family:monospace;border-top:2px solid red;';
    document.body.appendChild(debugDiv);
    alert('Debug panel added!');
  }
)();


// Top of omsstaging.controller.js
window.onerror = function(message, source, lineno, colno, error) {
    // Log to a hidden DOM element (fallback)
    var errorLog = document.getElementById('errorLog') || document.createElement('div');
    errorLog.id = 'errorLog';
    errorLog.style.display = 'none'; // Hide from users
    document.body.appendChild(errorLog);
    
    errorLog.innerHTML += '[ERROR] ' + message + ' at ' + source + ':' + lineno + '<br>';
    
    // Optional: Send to server (if backend API exists)
    // fetch('/log-error', { method: 'POST', body: JSON.stringify({ message, source, lineno, error }) });
    
    return true; // Prevents default browser error UI
};
